#!/usr/local/bin/koios
#   koios-polos (north star) -- customized c unit testing meta-program and mini-language
#   program under test  : gregg_2raw
#   auto-generated script file converted from a previous script version



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
PREP          include the prototype headers                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
   incl       include public header                gregg.h                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP          (WORDS) verify gregg shorthand adjustments                         WORDS_drawn_fix                                                                                       ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        PROG__unit_loud                                                                                                                   i_equal     0                                                                                                    
     local    create working/return variables      - - - - - - - - - - - - -   uchar  x_index [LEN_RECD] = "";                                                                                                                                                                                               
     local    create working/return variables      - - - - - - - - - - - - -   ushort x_fixed [LEN_RECD];                                                                                                                                                                                                    
     local    create working/return variables      - - - - - - - - - - - - -   uchar  x_out   [LEN_RECD] = "";                                                                                                                                                                                               

   COND       verify defenses                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call gregg fix                       WORDS_drawn_fix             NULL                       , x_fixed                                                                  i_lesser    0                                                                                                    
     exec     call gregg fix                       WORDS_drawn_fix             "t"                        , NULL                                                                     i_lesser    0                                                                                                    

   COND       verify very small success                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     get the index                        BTREE_gregg2key             "t"                        , x_index                                                                  i_greater   0                                                                                                    
     exec     call gregg fix                       WORDS_drawn_fix             x_index                    , x_fixed                                                                  i_equal     0                                                                                                    
     exec     ... generate human viewable          WORDS_drawn_show            x_fixed                    , x_out                                                                    i_equal     0                                                                                                    
     echo     ... check final                      - - - - - - - - - - - - -   x_out                                                                                                 s_equal     t                                                                                                    

   COND       verify longer consonant-only success                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     get the index                        BTREE_gregg2key             "t·r·k"                    , x_index                                                                  i_greater   0                                                                                                    
     exec     call gregg fix                       WORDS_drawn_fix             x_index                    , x_fixed                                                                  i_equal     0                                                                                                    
     exec     ... generate human viewable          WORDS_drawn_show            x_fixed                    , x_out                                                                    i_equal     0                                                                                                    
     echo     ... check final                      - - - - - - - - - - - - -   x_out                                                                                                 s_equal     t·r·k                                                                                                

   COND       verify a vowel only, no adjustment needed                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     get the index                        BTREE_gregg2key             "a"                        , x_index                                                                  i_greater   0                                                                                                    
     exec     call gregg fix                       WORDS_drawn_fix             x_index                    , x_fixed                                                                  i_equal     0                                                                                                    
     exec     ... generate human viewable          WORDS_drawn_show            x_fixed                    , x_out                                                                    i_equal     0                                                                                                    
     echo     ... check final                      - - - - - - - - - - - - -   x_out                                                                                                 s_equal     a                                                                                                    

   COND       verify a vowel - consonant combination                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     get the index                        BTREE_gregg2key             "a·d"                      , x_index                                                                  i_greater   0                                                                                                    
     exec     call gregg fix                       WORDS_drawn_fix             x_index                    , x_fixed                                                                  i_equal     0                                                                                                    
     exec     ... generate human viewable          WORDS_drawn_show            x_fixed                    , x_out                                                                    i_equal     0                                                                                                    
     echo     ... check final                      - - - - - - - - - - - - -   x_out                                                                                                 s_equal     axd·d                                                                                                 

   COND       verify a vowel - consonant combination (same family)               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     get the index                        BTREE_gregg2key             "a·t"                      , x_index                                                                  i_greater   0                                                                                                    
     exec     call gregg fix                       WORDS_drawn_fix             x_index                    , x_fixed                                                                  i_equal     0                                                                                                    
     exec     ... generate human viewable          WORDS_drawn_show            x_fixed                    , x_out                                                                    i_equal     0                                                                                                    
     echo     ... check final                      - - - - - - - - - - - - -   x_out                                                                                                 s_equal     axd·t                                                                                                 

   COND       verify a vowel - consonant combination                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     get the index                        BTREE_gregg2key             "a·m"                      , x_index                                                                  i_greater   0                                                                                                    
     exec     call gregg fix                       WORDS_drawn_fix             x_index                    , x_fixed                                                                  i_equal     0                                                                                                    
     exec     ... generate human viewable          WORDS_drawn_show            x_fixed                    , x_out                                                                    i_equal     0                                                                                                    
     echo     ... check final                      - - - - - - - - - - - - -   x_out                                                                                                 s_equal     axm·m                                                                                                 

   COND       verify a vowel - consonant combination                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     get the index                        BTREE_gregg2key             "a·f"                      , x_index                                                                  i_greater   0                                                                                                    
     exec     call gregg fix                       WORDS_drawn_fix             x_index                    , x_fixed                                                                  i_equal     0                                                                                                    
     exec     ... generate human viewable          WORDS_drawn_show            x_fixed                    , x_out                                                                    i_equal     0                                                                                                    
     echo     ... check final                      - - - - - - - - - - - - -   x_out                                                                                                 s_equal     axf·f                                                                                                 

   COND       verify a cons - vowel - cons                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     get the index                        BTREE_gregg2key             "k·a·r"                    , x_index                                                                  i_greater   0                                                                                                    
     exec     call gregg fix                       WORDS_drawn_fix             x_index                    , x_fixed                                                                  i_equal     0                                                                                                    
     exec     ... generate human viewable          WORDS_drawn_show            x_fixed                    , x_out                                                                    i_equal     0                                                                                                    
     echo     ... check final                      - - - - - - - - - - - - -   x_out                                                                                                 s_equal     k·akr·r                                                                                               

   COND       verify a cons - vowel - cons                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     get the index                        BTREE_gregg2key             "k·e·r"                    , x_index                                                                  i_greater   0                                                                                                    
     exec     call gregg fix                       WORDS_drawn_fix             x_index                    , x_fixed                                                                  i_equal     0                                                                                                    
     exec     ... generate human viewable          WORDS_drawn_show            x_fixed                    , x_out                                                                    i_equal     0                                                                                                    
     echo     ... check final                      - - - - - - - - - - - - -   x_out                                                                                                 s_equal     k·ekr·r                                                                                               

   COND       complete testing                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     stop testing                         PROG__unit_end                                                                                                                    i_equal     0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP          (WORDS) verify adding of dictionary entries                        WORDS__new                                                                                            ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        PROG__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     local    create working/return variables      - - - - - - - - - - - - -   tWORDS  *x_word = NULL;                                                                                                                                                                                                       

   COND       add a simple success                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call word addition                   WORDS__new                  &x_word      , "got"                 , "g·t"                                                          i_equal     0                                                                                                    
     echo     ... check new word                   - - - - - - - - - - - - -   x_word                                                                                                p_exists    0                                                                                                    
     echo     ... check new word                   - - - - - - - - - - - - -   x_word->english                                                                                       s_equal     got                                                                                                  
     get      ... check the counts                 WORDS__unit                 "e_count"   , 0                                                                                       s_equal     WORDS e_count    :    1n,    1f,    1b                                                               
     get      ... check entry                      WORDS__unit                 "e_entry"   , 0                                                                                       s_equal     WORDS eng   ( 0) :  3[got]                    3[g·t]                   ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 1                                                                                       s_equal     WORDS eng   ( 1) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 2                                                                                       s_equal     WORDS eng   ( 2) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 3                                                                                       s_equal     WORDS eng   ( 3) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 4                                                                                       s_equal     WORDS eng   ( 4) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 5                                                                                       s_equal     WORDS eng   ( 5) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   

   COND       attempt illegal inputs                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call word addition                   WORDS__new                  &x_word      , NULL                  , "g·t"                                                          i_lesser    0                                                                                                    
     exec     call word addition                   WORDS__new                  &x_word      , "got"                 , NULL                                                           i_lesser    0                                                                                                    
     get      ... check the counts                 WORDS__unit                 "e_count"   , 0                                                                                       s_equal     WORDS e_count    :    1n,    1f,    1b                                                               
     get      ... check entry                      WORDS__unit                 "e_entry"   , 0                                                                                       s_equal     WORDS eng   ( 0) :  3[got]                    3[g·t]                   ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 1                                                                                       s_equal     WORDS eng   ( 1) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 2                                                                                       s_equal     WORDS eng   ( 2) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 3                                                                                       s_equal     WORDS eng   ( 3) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 4                                                                                       s_equal     WORDS eng   ( 4) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 5                                                                                       s_equal     WORDS eng   ( 5) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   

   COND       add word with no return                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call word addition                   WORDS__new                  NULL    , "costly"              , "k·o·z·e"                                                           i_equal     0                                                                                                    
     get      ... check the counts                 WORDS__unit                 "e_count"   , 0                                                                                       s_equal     WORDS e_count    :    2n,    2f,    2b                                                               
     get      ... check entry                      WORDS__unit                 "e_entry"   , 0                                                                                       s_equal     WORDS eng   ( 0) :  3[got]                    3[g·t]                   ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 1                                                                                       s_equal     WORDS eng   ( 1) :  6[costly]                 7[k·o·z·e]               ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬  
     get      ... check entry                      WORDS__unit                 "e_entry"   , 2                                                                                       s_equal     WORDS eng   ( 2) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 3                                                                                       s_equal     WORDS eng   ( 3) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 4                                                                                       s_equal     WORDS eng   ( 4) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 5                                                                                       s_equal     WORDS eng   ( 5) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   

   COND       complete testing                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     stop testing                         PROG__unit_end                                                                                                                    i_equal     0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP          (WORDS) verify full record parsing                                 WORDS_dict_parse                                                                                      ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        PROG__unit_quiet                                                                                                                  i_equal     0                                                                                                    

   COND       verify a initial success                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call record parsing                  WORDS_dict_parse            "got             § g·t            §"                                                                  i_equal     0                                                                                                    
     get      ... check the counts                 WORDS__unit                 "e_count"   , 0                                                                                       s_equal     WORDS e_count    :    1n,    1f,    1b                                                               
     get      ... check entry                      WORDS__unit                 "e_entry"   , 0                                                                                       s_equal     WORDS eng   ( 0) :  3[got]                    3[g·t]                   ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 1                                                                                       s_equal     WORDS eng   ( 1) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 2                                                                                       s_equal     WORDS eng   ( 2) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 3                                                                                       s_equal     WORDS eng   ( 3) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 4                                                                                       s_equal     WORDS eng   ( 4) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 5                                                                                       s_equal     WORDS eng   ( 5) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   

   COND       attempt with illegal inputs                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call record parsing                  WORDS_dict_parse            NULL                                                                                                  i_lesser    0                                                                                                    
     get      ... check the counts                 WORDS__unit                 "e_count"   , 0                                                                                       s_equal     WORDS e_count    :    1n,    1f,    1b                                                               
     get      ... check entry                      WORDS__unit                 "e_entry"   , 0                                                                                       s_equal     WORDS eng   ( 0) :  3[got]                    3[g·t]                   ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 1                                                                                       s_equal     WORDS eng   ( 1) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 2                                                                                       s_equal     WORDS eng   ( 2) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 3                                                                                       s_equal     WORDS eng   ( 3) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 4                                                                                       s_equal     WORDS eng   ( 4) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 5                                                                                       s_equal     WORDS eng   ( 5) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   

   COND       verify with just manditory fields                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call record parsing                  WORDS_dict_parse            "google          § g·g·l          §"                                                                  i_equal     0                                                                                                    
     get      ... check the counts                 WORDS__unit                 "e_count"   , 0                                                                                       s_equal     WORDS e_count    :    2n,    2f,    2b                                                               
     get      ... check entry                      WORDS__unit                 "e_entry"   , 0                                                                                       s_equal     WORDS eng   ( 0) :  3[got]                    3[g·t]                   ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 1                                                                                       s_equal     WORDS eng   ( 1) :  6[google]                 5[g·g·l]                 ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 2                                                                                       s_equal     WORDS eng   ( 2) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 3                                                                                       s_equal     WORDS eng   ( 3) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 4                                                                                       s_equal     WORDS eng   ( 4) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 5                                                                                       s_equal     WORDS eng   ( 5) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   

   COND       use alternate separators                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call record parsing                  WORDS_dict_parse            "macabre         § m.a.k.a.b.r    §"                                                                  i_equal     0                                                                                                    
     get      ... check the counts                 WORDS__unit                 "e_count"   , 0                                                                                       s_equal     WORDS e_count    :    3n,    3f,    3b                                                               
     get      ... check entry                      WORDS__unit                 "e_entry"   , 0                                                                                       s_equal     WORDS eng   ( 0) :  3[got]                    3[g·t]                   ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 1                                                                                       s_equal     WORDS eng   ( 1) :  6[google]                 5[g·g·l]                 ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 2                                                                                       s_equal     WORDS eng   ( 2) :  7[macabre]               11[m·a·k·a·b·r]           ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬  
     get      ... check entry                      WORDS__unit                 "e_entry"   , 3                                                                                       s_equal     WORDS eng   ( 3) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 4                                                                                       s_equal     WORDS eng   ( 4) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 5                                                                                       s_equal     WORDS eng   ( 5) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   

   COND       use old-style head first                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call record parsing                  WORDS_dict_parse            "machine         § >.m.a.sh.e.n   §"                                                                  i_equal     0                                                                                                    
     get      ... check the counts                 WORDS__unit                 "e_count"   , 0                                                                                       s_equal     WORDS e_count    :    4n,    4f,    4b                                                               
     get      ... check entry                      WORDS__unit                 "e_entry"   , 0                                                                                       s_equal     WORDS eng   ( 0) :  3[got]                    3[g·t]                   ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 1                                                                                       s_equal     WORDS eng   ( 1) :  6[google]                 5[g·g·l]                 ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 2                                                                                       s_equal     WORDS eng   ( 2) :  7[macabre]               11[m·a·k·a·b·r]           ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬  
     get      ... check entry                      WORDS__unit                 "e_entry"   , 3                                                                                       s_equal     WORDS eng   ( 3) :  7[machine]               10[m·a·sh·e·n]            ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬  
     get      ... check entry                      WORDS__unit                 "e_entry"   , 4                                                                                       s_equal     WORDS eng   ( 4) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 5                                                                                       s_equal     WORDS eng   ( 5) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   

   COND       add a variation                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call record parsing                  WORDS_dict_parse            "initial         § e·n·e·sh       § t) initialed     §"                                               i_equal     0                                                                                                    
     get      ... check the counts                 WORDS__unit                 "e_count"   , 0                                                                                       s_equal     WORDS e_count    :    6n,    6f,    6b                                                               
     get      ... check entry                      WORDS__unit                 "e_entry"   , 0                                                                                       s_equal     WORDS eng   ( 0) :  3[got]                    3[g·t]                   ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 1                                                                                       s_equal     WORDS eng   ( 1) :  6[google]                 5[g·g·l]                 ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 2                                                                                       s_equal     WORDS eng   ( 2) :  7[macabre]               11[m·a·k·a·b·r]           ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬  
     get      ... check entry                      WORDS__unit                 "e_entry"   , 3                                                                                       s_equal     WORDS eng   ( 3) :  7[machine]               10[m·a·sh·e·n]            ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬  
     get      ... check entry                      WORDS__unit                 "e_entry"   , 4                                                                                       s_equal     WORDS eng   ( 4) :  7[initial]                8[e·n·e·sh]              ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 5                                                                                       s_equal     WORDS eng   ( 5) :  9[initialed]             12[e·n·e·sh·>·t]          ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 6                                                                                       s_equal     WORDS eng   ( 6) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 7                                                                                       s_equal     WORDS eng   ( 7) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 8                                                                                       s_equal     WORDS eng   ( 8) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   

   COND       add multiple variations                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call record parsing                  WORDS_dict_parse            "abandon  § a·b·a·n·tn  § ´) abandoning  § s) abandons § r) abandoner § m) abandonment §"             i_equal     0                                                                                                    
     get      ... check the counts                 WORDS__unit                 "e_count"   , 0                                                                                       s_equal     WORDS e_count    :   11n,   11f,   11b                                                               
     get      ... check entry                      WORDS__unit                 "e_entry"   , 3                                                                                       s_equal     WORDS eng   ( 3) :  7[machine]               10[m·a·sh·e·n]            ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬  
     get      ... check entry                      WORDS__unit                 "e_entry"   , 4                                                                                       s_equal     WORDS eng   ( 4) :  7[initial]                8[e·n·e·sh]              ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 5                                                                                       s_equal     WORDS eng   ( 5) :  9[initialed]             12[e·n·e·sh·>·t]          ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 6                                                                                       s_equal     WORDS eng   ( 6) :  7[abandon]               10[a·b·a·n·tn]            ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 7                                                                                       s_equal     WORDS eng   ( 7) : 10[abandoning]            14[a·b·a·n·tn·>·´]        ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 8                                                                                       s_equal     WORDS eng   ( 8) :  8[abandons]              14[a·b·a·n·tn·>·s]        ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 9                                                                                       s_equal     WORDS eng   ( 9) :  9[abandoner]             14[a·b·a·n·tn·>·r]        ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 10                                                                                      s_equal     WORDS eng   (10) : 11[abandonment]           14[a·b·a·n·tn·>·m]        ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   
     get      ... check entry                      WORDS__unit                 "e_entry"   , 11                                                                                      s_equal     WORDS eng   (11) :  -[]                       -[]                      ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬   




   COND       complete testing                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     stop testing                         PROG__unit_end                                                                                                                    i_equal     0                                                                                                    




